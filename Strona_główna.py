import streamlit as st
import pandas as pd
import io
import folium
from streamlit_folium import st_folium

stations = pd.read_csv("https://github.com/DariuszZajaczkowski/Hydrological-analysis-system/raw/main/stations_full.csv", encoding='Windows-1250')

#Okre≈õlenie adresu url aplikacji aby m√≥c wstawiƒá wygenerowany wcze≈õniej kod QR (Network URL Streamlit)-----------------------------------------------------------------------
url = "http://192.168.100.5:8501"

st.set_page_config(
    page_title="System analiz hydrologicznych",
    layout="wide"
)

st.markdown("<h1 style='text-align: center;'>üåßÔ∏è System Analiz Hydrologicznych üåä</h1>", unsafe_allow_html=True)
st.markdown("<p style='text-align: left;'>Projekt zak≈Çada stworzenie systemu do analizy i prognoz hydrologicznych w oparciu o dane meteorologiczne i hydrologiczne z otwartej bazy danych Instytutu Meteorologii i Gospodarki Wodnej - Pa≈Ñstwowego Instytutu Badawczego. System zosta≈Ç zaprojektowany z my≈õlƒÖ o analizie zjawisk hydrologicznych i meteorologicznych, takich jak stany w√≥d, opady atmosferyczne czy przep≈Çywy rzeczne, z uwzglƒôdnieniem zr√≥≈ºnicowania przestrzeni geograficznej w Polsce.</p>", unsafe_allow_html=True)
st.markdown("<p style='text-align: left;'>MocnƒÖ stronƒÖ projektu jest implemetnacja modelu opartego na algorytmie XGBoost, kt√≥ry umo≈ºliwia:</p>", unsafe_allow_html=True)
st.markdown("<p style='text-align: left;'>üîµ Predykcjƒô przysz≈Çych poziom√≥w w√≥d na podstawie wprowadzonych warunk√≥w hydrologicznych (np. opady atmosferyczne, przep≈Çywy w√≥d)</p>", unsafe_allow_html=True)
st.markdown("<p style='text-align: left;'>üîµ WizualnƒÖ ocenƒô skuteczno≈õci modelu (por√≥wnanie danych rzeczywistych i przewidywanych, wska≈∫niki jako≈õci modelu, wizuwalizacje oraz macierze korelacji miƒôdzy zmiennymi)</p>", unsafe_allow_html=True)
st.markdown("<p style='text-align: left;'>üîµ Filtrowanie danych po stacji, wojew√≥dztwie i regionie - co zwiƒôksza poziom jako≈õci modelu mimo istotnego wp≈Çywu ≈õrodowiska geograficznego</p>", unsafe_allow_html=True)

st.markdown("""
<div style='background-color: #3A506B; padding: 20px; border-radius: 10px; border-left: 5px solid #7289da;'>
    <h4 style='color: #ffffff;'>G≈Ç√≥wny pow√≥d rekomendacji pojedynczej stacji w modelowaniu</h4>
    <p style='color: #ffffff; font-size: 16px;'>
        Dane z r√≥≈ºnych stacji pomiarowych mogƒÖ mieƒá zupe≈Çnie inne charakterystyki ze wzglƒôdu na lokalne warunki 
        hydrologiczne, topografiƒô, klimat regionalny, czy zlewnie rzeczne. Mieszanie tych danych w jednym modelu 
        mo≈ºe wprowadzaƒá szum i obni≈ºaƒá skuteczno≈õƒá prognoz.
    </p>
</div>
""", unsafe_allow_html=True)
st.write(" ")
st.write(" ")

st.write("Dane meteorologiczne dotyczƒÖce opad√≥w atmosferycznych oraz hydrologii rzek:")

st.image("data_source.png",
         caption="Proces przep≈Çywu danych hydrologicznych i meteorologicznych w projeckie 'System Analiz Hydrologizcnych'")


st.write("Rozmieszczenie stacji pomiarowych na terenie Polski:")
m = folium.Map(location=[52.0, 19.0], zoom_start=6)


stations = pd.read_csv("C:/Users/dzaja/OneDrive/Pulpit/Studia_DSAD/Projekt_zaliczeniowy/stations_full.csv",
                       encoding="Windows-1250")

stations_m = stations.dropna(subset=['lat', 'lon'])
for i, row in stations_m.iterrows():
    popup_text = f"<b>Nazwa stacji:</b> {row['station']}<br><b>Region:</b> {row['obszar']}"
    folium.CircleMarker(
        location=[row['lat'], row['lon']],
        radius=4,
        color='blue',
        popup=popup_text,
    ).add_to(m)

st_folium(m, width=700, height=500)

#Tabela podsumowujƒÖca ile stacji jest per wojew√≥dztwo
st.write("Liczba stacji pomiarowych wykorzystanych w projekcie w podziale na wojew√≥dztwa")
stations_per_state = stations.groupby("state")["station"].count().reset_index()
stations_per_state.columns = ["Wojew√≥dztwo", "Liczba stacji"]
stations_per_state.index = stations_per_state.index + 1
st.table(stations_per_state)


